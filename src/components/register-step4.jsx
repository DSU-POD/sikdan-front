/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/1CJo3zV4Ou8
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Chivo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Progress } from "@/components/ui/progress";
import { CardTitle, Card, CardContent, CardFooter } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { useDispatch, useSelector } from "react-redux";
import { useEffect, useState } from "react";
import { setRegisterStep4Data } from "@/store/reducers/member.reducer";
import { useRouter } from "next/router";
import { showToast } from "./layout/toast";
import { api } from "@/modules/api.module";
import ArrowLeftIcon from "./icon/arrowlefticon";

export default function RegisterStep4Component() {
  const [goal, setGoal] = useState("");
  const [showempty, setShowempty] = useState(false);
  const dispatch = useDispatch();
  const data = useSelector((state) => state.memberReducer);
  const router = useRouter();
  const isError = true;

  const registerStep1 = useSelector(
    (state) => state.memberReducer.registerStep1
  );
  const registerStep2 = useSelector(
    (state) => state.memberReducer.registerStep2
  );
  const registerStep3 = useSelector(
    (state) => state.memberReducer.registerStep3
  );

  useEffect(() => {
    const { goal } = data.registerStep4;
    setGoal(goal);
  }, [data]);

  const handleGoal = (goal) => {
    setGoal(goal);
  };

  const handleSubmit2 = (e) => {
    e.preventDefault();

    router.push("/member/register/step3"); // Navigate to /member/register/step3
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!goal) {
      showToast("목표를 설정해주세요.", isError);
      return;
    }

    dispatch(
      setRegisterStep4Data({
        goal,
      })
    );

    const { userId, password, nickname, email, trainer_yn } = registerStep1;
    const { gender, age } = registerStep2;
    const { height, weight } = registerStep3;

    const registrationData = {
      registerData: {
        userId,
        password,
        nickname,
        email,
        trainer_yn,
        gender,
        age,
        height,
        weight,
        goal,
      },
    };

    const response = await api.post(
      "/member/register/complete",
      registrationData
    );

    if (response.result === "success") {
      showToast("회원가입이 성공하였습니다.");
      router.push("/");
    } else {
      showToast("회원가입에 실패했습니다. 다시 시도해주세요.", isError);
    }
  };

  return (
    <>
      <button
        onClick={() => router.push("/member/register/step3")} // 뒤로 가기 기능
        className="absolute top-4 left-4 p-2 rounded-full hover:bg-gray-300"
      >
        <ArrowLeftIcon className="w-5 h-5" />
      </button>
      <Progress value={95} className="w-full mb-8" />
      <CardTitle className="mb-16">목표가 무엇인가요?</CardTitle>
      <CardTitle className="mb-16 text-sm">
        정확한 식단 추천 및 분석을 위해 목표 정보가 필요합니다.
      </CardTitle>

      <Card className="w-full border-0">
        <CardContent className="grid gap-4">
          <div className="grid gap-6">
            <Button
              variant="outline"
              className={`w-full shadow ${
                goal === "weightdecrease" ? "bg-black text-white" : "bg-white"
              }`}
              onClick={(e) => {
                handleGoal("weightdecrease");
              }}
              style={{ height: "3.5rem" }}
            >
              체중 감소
            </Button>
            <Button
              variant="outline"
              className={`w-full shadow ${
                goal === "weightkeep" ? "bg-black text-white" : "bg-white"
              }`}
              onClick={(e) => {
                handleGoal("weightkeep");
              }}
              style={{ height: "3.5rem" }}
            >
              체중 유지
            </Button>
            <Button
              variant="outline"
              className={`w-full shadow ${
                goal === "weightincrease" ? "bg-black text-white" : "bg-white"
              }`}
              onClick={(e) => {
                handleGoal("weightincrease");
              }}
              style={{ height: "3.5rem" }}
            >
              체중 증가
            </Button>
            <Button
              variant="outline"
              className={`w-full shadow ${
                goal === "healthkeep" ? "bg-black text-white" : "bg-white"
              }`}
              onClick={(e) => {
                handleGoal("healthkeep");
              }}
              style={{ height: "3.5rem" }}
            >
              건강 유지
            </Button>
            <Button
              variant="outline"
              className={`w-full shadow ${
                goal === "others" ? "bg-black text-white" : "bg-white"
              }`}
              onClick={(e) => {
                handleGoal("others");
              }}
              style={{ height: "3.5rem" }}
            >
              그 외 기타
            </Button>
          </div>
        </CardContent>
      </Card>
      <div className="mt-auto border-0 w-full">
        <Card className="w-full border-0 shadow-none">
          <CardFooter className="flex justify-between gap-2">
            <Button
              variant="outline"
              className="w-full border shadow"
              onClick={handleSubmit2}
            >
              이전
            </Button>
            <Button
              type="submit"
              className="w-full bg-black text-white shadow"
              onClick={handleSubmit}
            >
              다음
            </Button>
          </CardFooter>
        </Card>
      </div>
    </>
  );
}
